{
	"name": "arun_pipe3",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Arun_parameter",
						"type": "DatasetReference",
						"parameters": {
							"arun_sys": {
								"value": "@pipeline().parameters.pipe2_sys",
								"type": "Expression"
							},
							"arun_dir": {
								"value": "@pipeline().parameters.pipe2_input",
								"type": "Expression"
							},
							"arun_filename": {
								"value": "@pipeline().parameters.pipe2_filename",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(item().name,pipeline().parameters.pipe2_chk)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait2 fa",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Wait1 tr",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 1
										}
									},
									{
										"name": "Execute Pipeline1",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Wait1 tr",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "arun_pipe1",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"arun_pipe_sys": {
													"value": "@pipeline().parameters.pipe2_sys",
													"type": "Expression"
												},
												"arun_pipe_input": {
													"value": "@pipeline().parameters.pipe2_input",
													"type": "Expression"
												},
												"arun_pipe_output": {
													"value": "@pipeline().parameters.pipe2_output",
													"type": "Expression"
												},
												"arun_pipe_archive": {
													"value": "@pipeline().parameters.pipe2_archive",
													"type": "Expression"
												},
												"arun_pipe_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"pipe2_sys": {
				"type": "string",
				"defaultValue": "adfproject"
			},
			"pipe2_input": {
				"type": "string",
				"defaultValue": "input"
			},
			"pipe2_output": {
				"type": "string",
				"defaultValue": "output"
			},
			"pipe2_filename": {
				"type": "string"
			},
			"pipe2_archive": {
				"type": "string",
				"defaultValue": "archive"
			},
			"pipe2_chk": {
				"type": "string",
				"defaultValue": "SalesLTProduct.txt"
			}
		},
		"folder": {
			"name": "self"
		},
		"annotations": []
	}
}